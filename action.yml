name: 'Build and Push Docker Image'
description: 'A reusable GitHub Action to build Java applications with Maven, create a Docker image, and push it to a registry'

inputs:
  # Repository Checkout
  checkout_ref:
    description: 'Git reference to checkout (branch, tag, or commit hash)'
    required: true

  # Java and Maven Configuration
  java_version:
    description: 'Java version to use'
    required: true
  java_distribution:
    description: 'Java distribution to use (default: zulu)'
    required: false
    default: 'zulu'
  maven_version:
    description: 'Maven version to use'
    required: true
  maven_options:
    description: 'Maven options for building the project (default: "-U clean package -DskipTests")'
    required: false
    default: '-U clean package -DskipTests'

  # Docker Build & Tagging
  build_version:
    description: 'Version to tag the Docker image with'
    required: true
  dockerfile_path:
    description: 'Path to the Dockerfile (default: "./Dockerfile")'
    required: true
    default: './Dockerfile'
  image_name:
    description: 'Name of the Docker image'
    required: true

  # Docker Registry Credentials
  registry_url:
    description: 'URL of the Docker registry'
    required: true
  registry_username:
    description: 'Username for the Docker registry'
    required: true
  registry_password:
    description: 'Password for the Docker registry'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.checkout_ref }}
        fetch-depth: 0

    - name: Set Up Java & Maven
      uses: s4u/setup-maven-action@v1.18.0
      with:
        java-version: ${{ inputs.java_version }}
        java-distribution: ${{ inputs.java_distribution }}
        maven-version: ${{ inputs.maven_version }}

    - name: Maven Build
      run: |
        mvn initialize
        mvn ${{ inputs.maven_options }}
      shell: bash

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry_url }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}
        logout: true

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ inputs.dockerfile_path }}
        push: true
        tags: ${{ inputs.registry_url }}/${{ inputs.image_name }}:${{ inputs.build_version }}
