name: 'Build and Push Docker Image'

description: 'A reusable GitHub Action to build Java applications with Maven, build a Docker image, and push it to a registry'

inputs:
  git_branch:
    description: 'Branch to checkout'
    required: true
  git_commit_hash:
    description: 'Commit Hash to checkout'
    required: false
    default: ''
  java_distribution:
    description: 'Java distribution to use'
    required: true
    default: 'zulu'
  java_version:
    description: 'Java version to use'
    required: true
  maven_version:
    description: 'Maven version to use'
    required: true
  build_version:
    description: 'Version to tag the image with'
    required: true
  dockerfile_path:
    description: 'Path to the Dockerfile (Root of the repository by default, e.g.: ./Dockerfile)'
    required: true
    default: './Dockerfile'

runs:
  using: "composite"
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.git_branch }}
        fetch-depth: 0

    - name: Checkout Specific Commit (if provided)
      run: |
        if [[ -n "${{ inputs.git_commit_hash }}" ]]; then
          git checkout ${{ inputs.git_commit_hash }}
        fi
      shell: bash

    - name: Set Up Java & Maven
      uses: s4u/setup-maven-action@v1.18.0
      with:
        java-version: ${{ inputs.java_version }}
        java-distribution: ${{ inputs.java_distribution }}
        maven-version: ${{ inputs.maven_version }}

    - name: Maven Build
      run: |
        mvn initialize
        mvn -U clean package -DskipTests
      shell: bash

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Nexus
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        logout: true

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ inputs.dockerfile_path }}
        push: true
        tags: |
          ${{ secrets.REGISTRY_URL }}/${{ secrets.IMAGE_NAME }}:${{ inputs.build_version }}